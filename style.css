html { height: 100%; }
body { 
  min-height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background: #EEE;
}

#app-container {
  text-align: center;
}

/* Header Layout */
#header {
  display: flex;
  justify-content: flex-start;
  align-items: center;
  margin-bottom: 30px;
  width: 100%;
  position: relative;
  /* background: purple; */ /* Debug: highlight header container */
  padding-left: 0;
  padding-right: 0;
}

/* Tab Navigation */
#tab-navigation {
  flex-shrink: 0;
  border: 1px solid #000;
  border-radius: 50px;
  padding: 2px;
  /* background: teal; */ /* Debug: highlight tab navigation container */
}

.tab-btn {
  margin: 0;
  padding: 12px 24px;
  font-size: 16px;
  font-weight: bold;
  border: none;
  border-radius: 50px;
  cursor: pointer;
  transition: all 0.3s ease;
  background: #f0f0f0;
  color: #333;
}

.tab-btn:hover {
  background: #e0e0e0;
}

.tab-btn.active {
  background: #000000;
  color: white;
}

.tab-btn.active:hover {
  background: #333333;
}

/* Action Buttons */
#action-buttons {
  display: flex;
  gap: 6px;
  flex-shrink: 0;
  position: absolute;
  right: 0;
  /* background: yellow; */ /* Debug: highlight action buttons container */
}

/* Mode Containers */
.mode-container {
  display: none;
}

.mode-container.active {
  display: block;
}

/* Ensure consistent height across modes */
#app-container {
  min-height: 600px; /* Account for header + flip display + timer inputs + spacing */
  display: flex;
  flex-direction: column;
}

/* Force consistent height for mode containers */
.mode-container {
  min-height: 300px; /* Space for flip display + timer inputs */
}

/* Hide timer inputs by default and on stopwatch mode */
#timer-input {
  display: none;
}

/* Show timer inputs only in timer mode */
#timer-container.active #timer-input {
  display: flex;
}

/* Hide reset button in timer mode (controlled by JavaScript) */

/* Custom Modal Styling */
.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
}

.modal {
  background: #EEE;
  border-radius: 15px;
  padding: 30px;
  text-align: center;
  max-width: 400px;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
}

.modal h3 {
  margin: 0 0 20px 0;
  font-family: 'Helvetica', sans-serif;
  font-weight: bold;
  color: #333;
}

.modal button {
  padding: 12px 24px;
  font-size: 16px;
  font-weight: bold;
  border: none;
  border-radius: 50px;
  cursor: pointer;
  background: #000000;
  color: white;
  transition: all 0.3s ease;
}

.modal button:hover {
  background: #333333;
}

/* Timer Input Styling */
#timer-input {
  display: flex;
  gap: 6px;
  justify-content: center;
  margin-top: 30px;
}

.input-group {
  display: flex;
  flex-direction: column-reverse;
  align-items: center;
}

.input-group label {
  font-size: 12px;
  font-weight: bold;
  margin-top: 8px;
  color: #333;
  font-family: 'Helvetica', sans-serif;
  text-transform: uppercase;
}

.input-group input {
  width: 80px;
  padding: 10px;
  font-size: 16px;
  border: 2px solid #ddd;
  border-radius: 8px;
  text-align: center;
  font-family: 'Helvetica', sans-serif;
  font-weight: bold;
  color: #666;
  transition: color 0.3s ease;
}

.input-group input:focus {
  outline: none;
  border-color: #000;
}

.input-group input:not(:placeholder-shown) {
  color: #000;
}

/* Remove increment/decrement arrows from number inputs */
.input-group input[type="number"]::-webkit-outer-spin-button,
.input-group input[type="number"]::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.input-group input[type="number"] {
  -moz-appearance: textfield;
}

/* Action Button Styling */
#action-buttons button {
  margin: 0 5px;
  padding: 12px 24px;
  font-size: 16px;
  font-weight: bold;
  border: none;
  border-radius: 50px;
  cursor: pointer;
  transition: all 0.3s ease;
}

#start-btn {
  background: #000000;
  color: white;
}

#start-btn:hover:not(:disabled) {
  background: #333333;
}

#pause-btn {
  background: #FF9800;
  color: white;
}

#pause-btn:hover:not(:disabled) {
  background: #e68900;
}

#stop-btn {
  background: #f44336;
  color: white;
}

#stop-btn:hover:not(:disabled) {
  background: #da190b;
}

#reset-btn {
  background: #2196F3;
  color: white;
}

#reset-btn:hover:not(:disabled) {
  background: #0b7dda;
}

#action-buttons button:disabled {
  background: #cccccc;
  color: #666666;
  cursor: not-allowed;
}

.flip-clock {
  text-align: center;
  perspective: 400px;
  margin: 20px auto;
  
  *,
  *:before,
  *:after { box-sizing: border-box; }
}

/* Ensure flip displays are properly contained */
#stopwatch-display,
#timer-display {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 200px; /* Consistent height for flip displays */
  /* background: cyan; */ /* Debug: highlight flip display containers */
}

.flip-clock__piece {
  display: inline-block;
  margin: 0 5px;
}

.flip-clock__slot {
  font-size: 2vw;
}

.card {
  display: block;
  position: relative; 
  padding-bottom: 0.72em;
  font-size: 9vw;
  line-height: 0.95;
  font-family: 'Helvetica', sans-serif;
  font-weight: bold;
}

.card__top,
.card__bottom,
.card__back::before,
.card__back::after {
  display: block;
  height: 0.72em;
  color: #ccc;
  background: #222;
  padding: 0.25em 0.25em;
  border-radius: 0.15em 0.15em 0 0;
  backface-visibility: hidden;
  transform-style: preserve-3d;
  width: 1.8em;
  transform: translateZ(0);
}

.card__bottom { 
  color: #FFF;
  position: absolute;
  top: 50%;
  left: 0;
  border-top: solid 1px #000;
  background: #393939; 
  border-radius: 0 0 0.15em 0.15em; 
  pointer-events: none;
  overflow: hidden;
}

.card__bottom::after {
  display: block;
  margin-top: -0.72em;
}

.card__back::before,
.card__bottom::after {
  content: attr(data-value);
}

.card__back {
  position: absolute;
  top: 0;
  height: 100%;
  left: 0%;
  pointer-events: none;
}

.card__back::before {
  position: relative;
  z-index: -1;
  overflow: hidden;
}

.flip .card__back::before {
  animation: flipTop 0.3s cubic-bezier(.37,.01,.94,.35);
  animation-fill-mode: both;
  transform-origin: center bottom;
}

.flip .card__back .card__bottom {
  transform-origin: center top;
  animation-fill-mode: both;
  animation: flipBottom 0.6s cubic-bezier(.15,.45,.28,1); /* 0.3s; */
}

@keyframes flipTop {
  0% {
    transform: rotateX(0deg);
    z-index: 2;
  }
  0%, 99% {
    opacity: 0.99;
  }
  100% {
    transform: rotateX(-90deg);
    opacity: 0;
  }
}

@keyframes flipBottom {
  0%, 50% {
    z-index: -1;
    transform: rotateX(90deg);
    opacity: 0;
  }
  51% {
    opacity: 0.99;
  }
  100% {
    opacity: 0.99;
    transform: rotateX(0deg);
    z-index: 5;
  }
} 